{"remainingRequest":"/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/src/views/curso/Tema4.vue?vue&type=template&id=36d8c3e0&lang=pug&","dependencies":[{"path":"/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/src/views/curso/Tema4.vue","mtime":1745463914960},{"path":"/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXJzby1tYWluLWNvbnRhaW5lci5wYi0zCiAgQmFubmVySW50ZXJubyg6c3ViVGl0dWxvPSInNC4gTWVkaWNpw7NuIGRlbCB2YWxvciBhZ3JlZ2FkbyBkZSBsb3MgcHJvY2Vzb3MgbWVqb3JhZG9zJyIpCiAgLmNvbnRhaW5lci50YXJqZXRhLnRhcmpldGEtLWJsYW5jYS5wLTQucC1tZC01Lm92ZXJmbG93LWhpZGRlbgoKICAgIC5yb3cubWItNQogICAgICAuY29sLWxnLTQubWItMy5tYi1sZy0wKGRhdGEtYW9zPSJmYWRlLXVwIikKICAgICAgICBkaXYudGFyamV0YS5iZy1jb2xvci10NC0xLnB5LTQucHgtMy5oLTEwMAogICAgICAgICAgcC5tYi0wIExhIG1lZGljacOzbiBkZWwgdmFsb3IgYWdyZWdhZG8gZGUgbG9zIHByb2Nlc29zIG1lam9yYWRvcywgcGVybWl0ZSBldmFsdWFyIGRlIG1hbmVyYSBvYmpldGl2YSBlbCBpbXBhY3RvIGRlIGxhcyBtZWpvcmFzIGltcGxlbWVudGFkYXMgZW4gbGEgZWZpY2llbmNpYSwgY2FsaWRhZCB5IHJlbnRhYmlsaWRhZCBkZSB1bmEgb3JnYW5pemFjacOzbi4gRXN0ZSBjb25jZXB0byBoYWNlIHJlZmVyZW5jaWEgYSBsYSBmb3JtYSBlbiBxdWUgbGFzIGFjdGl2aWRhZGVzIHkgY2FtYmlvcyBkZW50cm8gZGUgdW4gcHJvY2VzbywgcHVlZGVuIGdlbmVyYXIgdmFsb3IgdGFuZ2libGUgZSBpbnRhbmdpYmxlLCB0YW50byBwYXJhIGxhIGVtcHJlc2EgY29tbyBwYXJhIHN1cyBjbGllbnRlcyB5IG90cm9zIHN0YWtlaG9sZGVycy4KICAgICAgLmNvbC1sZy00Lm1iLTMubWItbGctMAogICAgICAgIGZpZ3VyZQogICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTQvMS5wbmciLCBkYXRhLWFvcz0iem9vbS1pbiIpCiAgICAgIC5jb2wtbGctNC5tYi0zLm1iLWxnLTAoZGF0YS1hb3M9ImZhZGUtZG93biIpCiAgICAgICAgZGl2LnRhcmpldGEuYmctY29sb3ItdDQtMi5weS00LnB4LTMuaC0xMDAKICAgICAgICAgIHAubWItMCBMYSBnZXN0acOzbiBwb3IgcHJvY2Vzb3MsIHF1ZSBzZSBiYXNhIGVuIGxhIGlkZW50aWZpY2FjacOzbiwgbW9kZWxhZG8sIGNvbnRyb2wgeSBtZWpvcmEgY29udGludWEgZGUgbG9zIHByb2Nlc29zIG9yZ2FuaXphY2lvbmFsZXMsIGJ1c2NhIG9wdGltaXphciBjYWRhIGV0YXBhIHBhcmEgcmVkdWNpciBjb3N0b3MsIG1lam9yYXIgbGEgY2FsaWRhZCBkZWwgcHJvZHVjdG8gbyBzZXJ2aWNpbywgeSBhdW1lbnRhciBsYSBzYXRpc2ZhY2Npw7NuIGRlbCBjbGllbnRlLiBTaW4gZW1iYXJnbywgcGFyYSBhc2VndXJhciBxdWUgbGFzIG1vZGlmaWNhY2lvbmVzIHNlYW4gZWZlY3RpdmFzLCBlcyBuZWNlc2FyaW8gbWVkaXIgeSBhbmFsaXphciBlbCB2YWxvciBhZ3JlZ2FkbyBxdWUgZXN0YXMgbWVqb3JhcyBhcG9ydGFuLgogICAgCgogICAgI3RfNF8xLnRpdHVsby1zZWd1bmRvKGRhdGEtYW9zPSJmbGlwLXVwIikKICAgICAgaDIgI1tzcGFuIDQuMV0gRWwgdmFsb3IgYWdyZWdhZG8geSBzdSByZWxldmFuY2lhIGVuIGxvcyBwcm9jZXNvcwoKICAgIC5iZy1mdWxsLXdpZHRoLmJnLWNvbG9yLXQ0LTMjcG9kY2FzdC0xCiAgICAgIC5weC00LnB4LW1kLTUKICAgICAgICAucm93Lmp1c3RpZnktY29udGVudC1iZXR3ZWVuLmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgICAgLmNvbC1sZy02CiAgICAgICAgICAgIC5weS00LnB0LW1kLTUKICAgICAgICAgICAgICBwKGRhdGEtYW9zPSJmYWRlLWxlZnQiKS5tYi00IFBhcmEgZXN0dWRpYXIgbGEgdGVtw6F0aWNhLCBsbyBpbnZpdGFtb3MgYSBlc2N1Y2hhciBlbCBzaWd1aWVudGUgcG9kY2FzdC4KICAgICAgICAgICAgICAKICAgICAgICAgICAgICBUYXJqZXRhQXVkaW8uY29sb3ItYWNlbnRvLWJvdG9uZXMuYmctY29sb3Itd2hpdGUubWItMygKICAgICAgICAgICAgICAgIHRleHRvPSJFbCB2YWxvciBhZ3JlZ2FkbyB5IHN1IHJlbGV2YW5jaWEgZW4gbG9zIHByb2Nlc29zIgogICAgICAgICAgICAgICAgdGllbXBvCiAgICAgICAgICAgICAgICA6YXVkaW89InJlcXVpcmUoJy4uLy4uL2Fzc2V0cy9jdXJzby9wb2RjYXN0L3BvZGNhc3QxLm1wMycpIgogICAgICAgICAgICAgICkKICAgIAogICAgICAgICAgLmNvbC1sZy00CiAgICAgICAgICAgIGZpZ3VyZQogICAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWE0LzIuc3ZnIiwgZGF0YS1hb3M9Inpvb20taW4iKQogICAgLmJnLWZ1bGwtd2lkdGguYmctY29sb3ItdDQtNC5tYi01CiAgICAgIC5weC00LnB4LW1kLTUucHktMwogICAgICAgIHAubWItMCBDYWRhIHRhcmVhIGRlbnRybyBkZSB1biBwcm9jZXNvLCBvIGVsIHByb2Nlc28gZW4gc3UgY29uanVudG8sIGRlYmUgc2VyIGV2YWx1YWRhIHkgcmV2aXNhZGEgcG9yIGVsIGVxdWlwbyBkZSB0cmFiYWpvLgoKICAgIHAoZGF0YS1hb3M9ImZhZGUtbGVmdCIpLm1iLTQgRXMgZnVuZGFtZW50YWwgcHJlZ3VudGFyc2Ugc2kgZXN0YSBhY3RpdmlkYWQgcmVhbG1lbnRlIGFwb3J0YSB2YWxvciBhbCBjbGllbnRlIGZpbmFsLCBvIGFsIHByb2Nlc28uIEV4aXN0ZW4gZG9zIHRpcG9zIGRlIGFjdGl2aWRhZGVzIHF1ZSBubyBhZ3JlZ2FuIHZhbG9yIChBTlYpOgoKICAgIC5iZy1mdWxsLXdpZHRoLmJnLWZvbmRvLXNsaWRlci5tYi01CiAgICAgIC5wLTQucC1tZC01CiAgICAgICAgU2x5ZGVyQSh0aXBvPSJiIikuYmctd2hpdGUKICAgICAgICAgIC5yb3cuYWxpZ24taXRlbXMtY2VudGVyLnAtNC5wLW1kLTUKICAgICAgICAgICAgLmNvbC1sZy01CiAgICAgICAgICAgICAgZmlndXJlCiAgICAgICAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hNC9zbGlkZS0xLnBuZyIpCiAgICAgICAgICAgIC5jb2wtbGctNwogICAgICAgICAgICAgIGg0IEFjdGl2aWRhZGVzIGlubmVjZXNhcmlhcyBjYXVzYWRhcyBwb3IgdW4gZGlzZcOxbyBkZWZpY2llbnRlIGRlbCBwcm9jZXNvCiAgICAgICAgICAgICAgcCBFc3RhcyBhY3RpdmlkYWRlcyBzdXJnZW4gY3VhbmRvIGVsIHByb2Nlc28gbm8gZXN0w6EgZnVuY2lvbmFuZG8gY29ycmVjdGFtZW50ZSBvIG5vIGZ1ZSBkaXNlw7FhZG8gZGUgbWFuZXJhIGFkZWN1YWRhLiBFamVtcGxvcyBkZSBlc3RvIHNvbiBtb3ZpbWllbnRvcyBpbm5lY2VzYXJpb3MsIHRpZW1wb3MgZGUgZXNwZXJhLCBwcmVwYXJhY2nDs24gcHJldmlhIHBhcmEgb3RyYXMgYWN0aXZpZGFkZXMsIGFsbWFjZW5hbWllbnRvIHkgcmV0cmFiYWpvLiBBdW5xdWUgbm8gc29uIG5lY2VzYXJpYXMgcGFyYSBvYnRlbmVyIGVsIHJlc3VsdGFkbyBlc3BlcmFkbywgc2UgcmVhbGl6YW4gZGViaWRvIGEgbGFzIGRlZmljaWVuY2lhcyBlbiBlbCBkaXNlw7FvIGRlbCBwcm9jZXNvLiBFc3RlIHRpcG8gZGUgYWN0aXZpZGFkZXMgc3VlbGVuIGNvbnNpZGVyYXJzZSBwYXJ0ZSBkZSBsb3MgY29zdG9zIGFzb2NpYWRvcyBjb24gbGEgYmFqYSBjYWxpZGFkLgogICAgICAgICAgLnJvdy5hbGlnbi1pdGVtcy1jZW50ZXIucC00LnAtbWQtNQogICAgICAgICAgICAuY29sLWxnLTUKICAgICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWE0L3NsaWRlLTIucG5nIikKICAgICAgICAgICAgLmNvbC1sZy03CiAgICAgICAgICAgICAgaDQgQWN0aXZpZGFkZXMgcXVlIG5vIHNvbiByZXF1ZXJpZGFzIG5pIHBvciBlbCBjbGllbnRlIG5pIHBvciBlbCBwcm9jZXNvCiAgICAgICAgICAgICAgcCBTb24gYXF1ZWxsYXMgcXVlIG5vIGFwb3J0YW4gdmFsb3IgeSBxdWUgcHVlZGVuIGVsaW1pbmFyc2Ugc2luIGFmZWN0YXIgZWwgcmVzdWx0YWRvIGZpbmFsIHF1ZSByZWNpYmUgZWwgY2xpZW50ZS4KICAgIAoKICAgIC50aXR1bG8tZmlndXJhLm1iLTIKICAgICAgaDUgRmlndXJhIDMuIAogICAgICBzcGFuIEV2YWx1YWNpw7NuIGRlbCB2YWxvciBhZ3JlZ2Fkby4KICAgIAogICAgZmlndXJlLmJnLWNvbG9yLWluZm8ucC00LnAtbWQtNS5tYi01CiAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWE0L2YzLnBuZyIsIGRhdGEtYW9zPSJ6b29tLWluIiwgc3R5bGU9Im1heC13aWR0aDogOTg1cHg7IikubXgtYXV0bwogICAgCiAgICAjdF80XzIudGl0dWxvLXNlZ3VuZG8oZGF0YS1hb3M9ImZsaXAtdXAiKQogICAgICBoMiAjW3NwYW4gNC4yXSBEZXNhZsOtb3MgeSBlc3RyYXRlZ2lhcyBwYXJhIGxhIG1lZGljacOzbiBkZWwgdmFsb3IgYWdyZWdhZG8KCiAgICBwLm1iLTUgRXhpc3RlbiBkaXZlcnNvcyBpbmRpY2Fkb3JlcyB5IGhlcnJhbWllbnRhcywgcXVlIHB1ZWRlbiBzZXIgdXRpbGl6YWRvcyBwYXJhIG1lZGlyIGVsIHZhbG9yIGFncmVnYWRvIGRlIGxvcyBwcm9jZXNvcyBtZWpvcmFkb3MuIEFsZ3Vub3MgZGUgZXN0b3MgaW5jbHV5ZW46CiAgICAKICAgIC5iZy1mdWxsLXdpZHRoLmJnLWZvbmRvLXNsaWRlci5tYi01CiAgICAgIC5wLTQucC1tZC01CiAgICAgICAgU2x5ZGVyQSh0aXBvPSJiIikuYmctd2hpdGUKICAgICAgICAgIC5yb3cuYWxpZ24taXRlbXMtY2VudGVyLnAtNC5wLW1kLTUKICAgICAgICAgICAgLmNvbC1sZy01CiAgICAgICAgICAgICAgZmlndXJlCiAgICAgICAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hNC9zbGlkZS0xLTIucG5nIiBhbHQ9IlRpZW1wbyBkZSBjaWNsbyIpCiAgICAgICAgICAgIC5jb2wtbGctNwogICAgICAgICAgICAgIGg0IFRpZW1wbyBkZSBjaWNsbwogICAgICAgICAgICAgIHAgTGEgcmVkdWNjacOzbiBlbiBlbCB0aWVtcG8gbmVjZXNhcmlvIHBhcmEgY29tcGxldGFyIHVuIHByb2Nlc28gbyBlbnRyZWdhciB1biBwcm9kdWN0byBvIHNlcnZpY2lvIGVzIHVuIGluZGljYWRvciBjbGF2ZSBkZSBtZWpvcmEuIExhIHJlZHVjY2nDs24gZGUgdGllbXBvcyBkZSBjaWNsbyBnZW5lcmFsbWVudGUgc2UgdHJhZHVjZSBlbiB1bmEgbWF5b3IgZWZpY2llbmNpYSwgbWVqb3IgYXByb3ZlY2hhbWllbnRvIGRlIHJlY3Vyc29zIHkgYXVtZW50byBkZSBsYSBzYXRpc2ZhY2Npw7NuIGRlbCBjbGllbnRlLgoKICAgICAgICAgIC5yb3cuYWxpZ24taXRlbXMtY2VudGVyLnAtNC5wLW1kLTUKICAgICAgICAgICAgLmNvbC1sZy01CiAgICAgICAgICAgICAgZmlndXJlCiAgICAgICAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hNC9zbGlkZS0yLTIucG5nIiBhbHQ9IkNvc3RvcyBvcGVyYXRpdm9zIikKICAgICAgICAgICAgLmNvbC1sZy03CiAgICAgICAgICAgICAgaDQgQ29zdG9zIG9wZXJhdGl2b3MKICAgICAgICAgICAgICBwIEV2YWx1YXIgZWwgaW1wYWN0byBkZSBsYSBtZWpvcmEgZW4gbG9zIGNvc3RvcyBvcGVyYXRpdm9zIGVzIGVzZW5jaWFsLiBVbmEgZGlzbWludWNpw7NuIGVuIGxvcyBjb3N0b3Mgc2luIGNvbXByb21ldGVyIGxhIGNhbGlkYWQgZGVsIHByb2R1Y3RvIG8gc2VydmljaW8gZXMgdW4gY2xhcm8gaW5kaWNhZG9yIGRlIHZhbG9yIGFncmVnYWRvLgoKICAgICAgICAgIC5yb3cuYWxpZ24taXRlbXMtY2VudGVyLnAtNC5wLW1kLTUKICAgICAgICAgICAgLmNvbC1sZy01CiAgICAgICAgICAgICAgZmlndXJlCiAgICAgICAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hNC9zbGlkZS0zLTIucG5nIiBhbHQ9IkNhbGlkYWQiKQogICAgICAgICAgICAuY29sLWxnLTcKICAgICAgICAgICAgICBoNCBDYWxpZGFkCiAgICAgICAgICAgICAgcCBMYSBtZWpvcmEgZW4gbGEgY2FsaWRhZCBkZWwgcHJvZHVjdG8gbyBzZXJ2aWNpbyB0YW1iacOpbiBlcyB1bmEgbcOpdHJpY2EgZnVuZGFtZW50YWwuIEEgdHJhdsOpcyBkZSB0w6ljbmljYXMgY29tbyBlbCBjb250cm9sIGVzdGFkw61zdGljbyBkZSBwcm9jZXNvcyBvIGxhIGV2YWx1YWNpw7NuIGRlIGxhIHNhdGlzZmFjY2nDs24gZGVsIGNsaWVudGUsIGxhcyBvcmdhbml6YWNpb25lcyBwdWVkZW4gbWVkaXIgZWwgaW1wYWN0byBkaXJlY3RvIGRlIGxhcyBtZWpvcmFzIGVuIGxhIGNhbGlkYWQgcGVyY2liaWRhIHBvciBsb3MgY2xpZW50ZXMuCgogICAgICAgICAgLnJvdy5hbGlnbi1pdGVtcy1jZW50ZXIucC00LnAtbWQtNQogICAgICAgICAgICAuY29sLWxnLTUKICAgICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWE0L3NsaWRlLTQtMi5wbmciIGFsdD0iU2F0aXNmYWNjacOzbiBkZWwgY2xpZW50ZSIpCiAgICAgICAgICAgIC5jb2wtbGctNwogICAgICAgICAgICAgIGg0IFNhdGlzZmFjY2nDs24gZGVsIGNsaWVudGUKICAgICAgICAgICAgICBwIExhIHBlcmNlcGNpw7NuIGRlbCBjbGllbnRlIGVzIHVubyBkZSBsb3MgbWVqb3JlcyByZWZsZWpvcyBkZWwgdmFsb3IgYWdyZWdhZG8uIEEgdHJhdsOpcyBkZSBlbmN1ZXN0YXMgeSBvdHJvcyBtw6l0b2RvcyBkZSByZXRyb2FsaW1lbnRhY2nDs24sIHNlIHB1ZWRlIG1lZGlyIGPDs21vIGxhcyBtZWpvcmFzIGVuIGxvcyBwcm9jZXNvcyBpbXBhY3RhbiBsYSBleHBlcmllbmNpYSBkZWwgY2xpZW50ZS4KCiAgICAgICAgICAucm93LmFsaWduLWl0ZW1zLWNlbnRlci5wLTQucC1tZC01CiAgICAgICAgICAgIC5jb2wtbGctNQogICAgICAgICAgICAgIGZpZ3VyZQogICAgICAgICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTQvc2xpZGUtNS0yLnBuZyIgYWx0PSJSZXRvcm5vIGRlIGxhIGludmVyc2nDs24gKFJPSSkiKQogICAgICAgICAgICAuY29sLWxnLTcKICAgICAgICAgICAgICBoNCBSZXRvcm5vIGRlIGxhIGludmVyc2nDs24gKFJPSSkKICAgICAgICAgICAgICBwIEVsIGPDoWxjdWxvIGRlbCBST0kgcmVsYWNpb25hZG8gY29uIGxhcyBtZWpvcmFzIGVuIGxvcyBwcm9jZXNvcywgZXMgdW5hIGZvcm1hIGRpcmVjdGEgZGUgbWVkaXIgZWwgdmFsb3IgZmluYW5jaWVybyBnZW5lcmFkby4gRWwgUk9JIGNvbXBhcmEgbG9zIGJlbmVmaWNpb3MgZWNvbsOzbWljb3Mgb2J0ZW5pZG9zLCBjb24gbG9zIGNvc3RvcyBhc29jaWFkb3MgYSBsYSBpbXBsZW1lbnRhY2nDs24gZGUgbGFzIG1lam9yYXMuCgogICAgCiAgICAjdF80XzMudGl0dWxvLXNlZ3VuZG8oZGF0YS1hb3M9ImZsaXAtdXAiKQogICAgICBoMiAjW3NwYW4gNC4zXSBEZXNhZsOtb3MgeSBlc3RyYXRlZ2lhcyBwYXJhIGxhIG1lZGljacOzbiBkZWwgdmFsb3IgYWdyZWdhZG8KCgogICAgLnJvdy5tYi01CiAgICAgIC5jb2wtbGctOAogICAgICAgIHAoZGF0YS1hb3M9ImZhZGUtbGVmdCIpLm1iLTQgTWVkaXIgZWwgdmFsb3IgYWdyZWdhZG8gZGUgbG9zIHByb2Nlc29zIG1lam9yYWRvcywgbm8gZXN0w6EgZXhlbnRvIGRlIGRlc2Fmw61vcy4gRXMgbmVjZXNhcmlvIGNvbnRhciBjb24gc2lzdGVtYXMgYWRlY3VhZG9zIGRlIHJlY29sZWNjacOzbiBkZSBkYXRvcywgYW7DoWxpc2lzIHkgcmVwb3J0ZXMsIHBhcmEgcmVhbGl6YXIgdW5hIGV2YWx1YWNpw7NuIHByZWNpc2EuIEFkZW3DoXMsIGxhIG1lZGljacOzbiBkZWJlIHNlciBjb2hlcmVudGUgY29uIGxvcyBvYmpldGl2b3MgZXN0cmF0w6lnaWNvcyBkZSBsYSBvcmdhbml6YWNpw7NuIHkgY29uIGxhcyBleHBlY3RhdGl2YXMgZGUgbG9zIGNsaWVudGVzLgogICAgCiAgICAgICAgLmJnLWNvbG9yLXQ0LTUucC00KGRhdGEtYW9zPSJmYWRlLWxlZnQiKS5tYi00CiAgICAgICAgICAucm93LmFsaWduLWl0ZW1zLXN0YXJ0CiAgICAgICAgICAgIC5jb2wtbGctYXV0bwogICAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWE0L2ljb24tMS5zdmciLCBzdHlsZT0ibWF4LXdpZHRoOiA5MHB4IikubXgtYXV0bwogICAgICAgICAgICAuY29sLWxnCiAgICAgICAgICAgICAgcC5tYi0wIFVuYSBlc3RyYXRlZ2lhIGVmaWNheiBwYXJhIGxhIG1lZGljacOzbiBkZWwgdmFsb3IgYWdyZWdhZG8sIGVzIGludGVncmFyIGxhIG1lZGljacOzbiBkZSBsb3MgcHJvY2Vzb3MgZGVudHJvIGRlIHVuIHNpc3RlbWEgZGUgZ2VzdGnDs24gZGUgY2FsaWRhZCB5IG1lam9yYSBjb250aW51YS4gRXN0byBwZXJtaXRpcsOhIG1vbml0b3JlYXIgZWwgcHJvZ3Jlc28sIGUgaWRlbnRpZmljYXIgw6FyZWFzIGRlIG9wb3J0dW5pZGFkIHkgYWp1c3RlcyBuZWNlc2FyaW9zLiBJbXBsZW1lbnRhciBoZXJyYW1pZW50YXMgY29tbyBlbCBtYXBlbyBkZSBwcm9jZXNvcywgYW7DoWxpc2lzIGRlIGNhdXNhIHkgZWZlY3RvIG8gZWwgY2ljbG8gUERDQSAoUGxhbi1Eby1DaGVjay1BY3QpIHB1ZWRlIHNlciBtdXkgw7p0aWwgZW4gZXN0ZSBzZW50aWRvLgogICAgCiAgICAKICAgICAgLmNvbC1sZy00CiAgICAgICAgZmlndXJlCiAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hNC8zLnBuZyIsIGRhdGEtYW9zPSJ6b29tLWluIikKICAgIAogICAgICAgICAgCiAgICAuYmctZnVsbC13aWR0aC5ib3JkZXItdG9wLmNvbG9yLXByaW1hcmlvCiAgICAgIC5wLTQucC1tZC01CiAgICAgICAgaDIoZGF0YS1hb3M9ImZhZGUtbGVmdCIpIE1BVEVSSUFMIENPTVBMRU1FTlRBUklPCiAgICAgICAgLnJvdy5tYXRlcmlhbC1jb21wbGVtZW50YXJpbwogICAgICAgICAgLmNvbC0xMi5jb2wtbWQtNi5jb2wtbGctNwogICAgICAgICAgICBwIExvcyBpbnZpdGFtb3MgYSBleHBsb3JhciBlbCBtYXRlcmlhbCBjb21wbGVtZW50YXJpbyBkZSBlc3RlIGN1cnNvLCBlbiBlc3RhIHNlY2Npw7NuIGVuY29udHJhcsOhIHJlY3Vyc29zIHF1ZSBsZSBwZXJtaXRpcsOhbiBwcm9mdW5kaXphciB5IGVucmlxdWVjZXIgc3UgYXByZW5kaXphamUgZW4gbG9zIHRlbWFzIHRyYXRhZG9zIGVuIGVzdGEgdW5pZGFkLgoKICAgICAgICAgICAgcC5kLWZsZXgubXktNAogICAgICAgICAgICAgIGltZy5tZS0zKHNyYz0nQC9hc3NldHMvdGVtcGxhdGUvaWNvbm8teXQuc3ZnJyA6c3R5bGU9InsnbWF4LXdpZHRoJzonMTZweCd9IikKICAgICAgICAgICAgICBhKGhyZWY9Imh0dHBzOi8veW91dHUuYmUvU2FzZFhmcTk5U3M/c2k9LXRSLVc0SUY1ekRhTWRsZyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciIpIE5vZG9jaW9zIENvbmVjdGFuZG8gKDIwMTEsIDIgZGUgbm92aWVtYnJlKSBHRU5FUkEgVkFMT1IgQUdSRUdBRE8gQSBUVSBORUdPQ0lPIDIgRURHQVIgUlVGRklORU5HTyBOT0RPQ0lPUy4KCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnJyA6c3R5bGU9InsnbWF4LXdpZHRoJzonMTZweCd9IikKICAgICAgICAgICAgICBhKGhyZWY9Imh0dHBzOi8vd3d3LnJlZGFseWMub3JnL2pvdXJuYWwvNTUzNy81NTM3NzUzNDYwMDQvaHRtbC8iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiKSBWaW5hamVyYS1aYW1vcmEsIEEuLCBDZXNww7NuLUNhc3RybywgUi4sICYgTWFycmVyby1EZWxnYWRvLCBGLiAoMjAyMykuIERldGVybWluYWNpw7NuIGRlbCB2YWxvciBhZ3JlZ2FkbyBzb3N0ZW5pYmxlIGRlIGxvcyBwcm9jZXNvcyBlbiBsYSBjYWRlbmEgZGUgc3VtaW5pc3Ryby4gUmV2aXN0YSBVSVMgSW5nZW5pZXLDrWFzLCAyMigxKSwgMzUtNDguCgogICAgICAgICAgICBwLmQtZmxleC5teS00CiAgICAgICAgICAgICAgaW1nLm1lLTMoc3JjPSdAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZycgOnN0eWxlPSJ7J21heC13aWR0aCc6JzE2cHgnfSIpCiAgICAgICAgICAgICAgYShocmVmPSJodHRwczovL2ludmVzdGlnYWNpb24uZmNhLnVuYW0ubXgvZG9jcy9tZW1vcmlhcy8yMDExLzEuMjYucGRmIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIikgTWF5b3JnYSBTYW5jaGV6LCBKLiBaLiwgJiBCb25pbGxhIEJvbmlsbGEsIFkuIE0uICgyMDExKS4gTWVkaWNpw7NuIGRlIGxhIHByb2R1Y3RpdmlkYWQgcG9yIGVsIG3DqXRvZG8gZGVsIHZhbG9yIGFncmVnYWRvIChNUFZBKSBhIGxhcyBQeW1lcyBkZSBmYW1pbGlhIGRlbCBzZWN0b3IgaW5kdXN0cmlhIGRlIGxhIGNpdWRhZCBkZSBCb2dvdMOhIEQuQy4KCiAgICAgICAgICAuY29sLTEyLmNvbC1tZC02LmNvbC1sZy0zLm9mZnNldC1sZy0xCiAgICAgICAgICAgIGZpZ3VyZQogICAgICAgICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL21hdGVyaWFsLWNvbXBsZW1lbnRhcmlvLnN2ZycsIGFsdD0nJykKICAgIAo="},null]}