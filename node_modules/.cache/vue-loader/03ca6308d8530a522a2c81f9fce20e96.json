{"remainingRequest":"/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/node_modules/pug-plain-loader/index.js!/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/src/views/curso/Tema1.vue?vue&type=template&id=35f90869&lang=pug&","dependencies":[{"path":"/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/src/views/curso/Tema1.vue","mtime":1745463914960},{"path":"/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Administracion_por_Procesos/U3_Administracion_por_Procesos/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}